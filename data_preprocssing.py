# -*- coding: utf-8 -*-
"""Data Preprocssing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IWRKae3T_iT5Ps56HO8d8-YzZBKT4jsJ
"""



"""# IMPORTING LIBRARIES"""

import numpy as np

import pandas as pd

import matplotlib.pyplot as plt



"""# IMPORTING THE DATASET"""

dataset = pd.read_csv("Book.csv")

dataset

dataset.head

dataset.columns

dataset.count()

dataset.describe()

dataset.info()

x = dataset.iloc[ :, 0 : 3].values

type(x)

print(x)

y = dataset.iloc[ : , -1].values

type(y)

print(y)



"""# WORKING WITH MISSING DATA"""

from sklearn.impute import SimpleImputer

imputer = SimpleImputer(missing_values= np.nan, strategy="mean")

x

x[ :, 1:3]

imputer.fit(x[ :, 1:3])

x

imputer.transform(x[ :, 1:3] )

x[ :, 1:3] = imputer.transform(x[ :, 1:3] )

print(x)



"""# ENCODING CATEGORICAL DATA"""

from sklearn.compose import ColumnTransformer

from sklearn.preprocessing import OneHotEncoder

ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [0])],remainder = 'passthrough')

x = np.array(ct.fit_transform(x))

print(x)

from sklearn.preprocessing import LabelEncoder

le = LabelEncoder()

y = le.fit_transform(y)

print(y)



"""# SPLITTING DATASET INTO TRAIN AND TEST"""

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)

x_train

x_test

y_train

y_test



"""# FEATURE SCALING"""

from sklearn.preprocessing import StandardScaler

sc = StandardScaler()

x_train[:, 1:] = sc.fit_transform(x_train[:, 1:])

x_test[:, 1:] = sc.transform(x_test[:, 1:])

print(x_train)

print(x_test)

